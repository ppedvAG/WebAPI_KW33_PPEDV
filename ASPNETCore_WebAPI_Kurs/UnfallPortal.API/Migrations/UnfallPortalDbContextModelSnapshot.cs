// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UnfallPortal.API.Data;

#nullable disable

namespace UnfallPortal.API.Migrations
{
    [DbContext(typeof(UnfallPortalDbContext))]
    partial class UnfallPortalDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("UnfallPortal.Shared.Entities.ErsteHilfeKurs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ort")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ErsteHilfeKurs");
                });

            modelBuilder.Entity("UnfallPortal.Shared.Entities.Mandant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MandantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MandantId");

                    b.ToTable("Mandant");
                });

            modelBuilder.Entity("UnfallPortal.Shared.Entities.MandantKurs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ErsteHilfeKursId")
                        .HasColumnType("int");

                    b.Property<int>("KursId")
                        .HasColumnType("int");

                    b.Property<int>("MandantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ErsteHilfeKursId");

                    b.HasIndex("MandantId");

                    b.ToTable("MandantKurs");
                });

            modelBuilder.Entity("UnfallPortal.Shared.Entities.MandantUnfall", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("MandantId")
                        .HasColumnType("int");

                    b.Property<string>("UnfallName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MandantId");

                    b.ToTable("MandantUnfall");
                });

            modelBuilder.Entity("UnfallPortal.Shared.Entities.MandantUnfallDokumente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("Dateinamen")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MandantUnfallId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MandantUnfallId");

                    b.ToTable("MandantUnfallDokumente");
                });

            modelBuilder.Entity("UnfallPortal.Shared.Entities.Mandant", b =>
                {
                    b.HasOne("UnfallPortal.Shared.Entities.Mandant", null)
                        .WithMany("Mandants")
                        .HasForeignKey("MandantId");
                });

            modelBuilder.Entity("UnfallPortal.Shared.Entities.MandantKurs", b =>
                {
                    b.HasOne("UnfallPortal.Shared.Entities.ErsteHilfeKurs", "ErsteHilfeKurs")
                        .WithMany("MandantKurs")
                        .HasForeignKey("ErsteHilfeKursId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UnfallPortal.Shared.Entities.Mandant", "Mandant")
                        .WithMany()
                        .HasForeignKey("MandantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ErsteHilfeKurs");

                    b.Navigation("Mandant");
                });

            modelBuilder.Entity("UnfallPortal.Shared.Entities.MandantUnfall", b =>
                {
                    b.HasOne("UnfallPortal.Shared.Entities.Mandant", "MandantRef")
                        .WithMany()
                        .HasForeignKey("MandantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MandantRef");
                });

            modelBuilder.Entity("UnfallPortal.Shared.Entities.MandantUnfallDokumente", b =>
                {
                    b.HasOne("UnfallPortal.Shared.Entities.MandantUnfall", "MandantUnfall")
                        .WithMany("MandantUnfallDokumente")
                        .HasForeignKey("MandantUnfallId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MandantUnfall");
                });

            modelBuilder.Entity("UnfallPortal.Shared.Entities.ErsteHilfeKurs", b =>
                {
                    b.Navigation("MandantKurs");
                });

            modelBuilder.Entity("UnfallPortal.Shared.Entities.Mandant", b =>
                {
                    b.Navigation("Mandants");
                });

            modelBuilder.Entity("UnfallPortal.Shared.Entities.MandantUnfall", b =>
                {
                    b.Navigation("MandantUnfallDokumente");
                });
#pragma warning restore 612, 618
        }
    }
}
